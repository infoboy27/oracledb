name: Oracle APEX Setup Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-setup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Test Docker Compose
      run: |
        # Test if docker-compose file is valid
        docker-compose config
        
    - name: Test Scripts
      run: |
        # Make scripts executable
        chmod +x scripts/*.sh
        
        # Test script syntax
        bash -n scripts/setup.sh
        bash -n scripts/health-check.sh
        bash -n scripts/cleanup.sh
        bash -n scripts/discord-alerts.sh
        
    - name: Test Environment File
      run: |
        # Check if env.example exists and has required variables
        if [ ! -f env.example ]; then
          echo "❌ env.example file not found"
          exit 1
        fi
        
        # Check for required variables
        required_vars=("DB_PASSWORD" "APEX_ADMIN_EMAIL" "APEX_ADMIN_PASSWORD" "DISCORD_WEBHOOK_URL")
        for var in "${required_vars[@]}"; do
          if ! grep -q "^${var}=" env.example; then
            echo "❌ Required variable $var not found in env.example"
            exit 1
          fi
        done
        
        echo "✅ Environment file validation passed"
        
    - name: Test Discord Webhook (if secrets available)
      if: secrets.DISCORD_WEBHOOK_URL != ''
      run: |
        # Create temporary .env file for testing
        echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" > .env
        echo "DB_PASSWORD=test123" >> .env
        echo "APEX_ADMIN_EMAIL=test@example.com" >> .env
        echo "APEX_ADMIN_PASSWORD=test123" >> .env
        
        # Test Discord webhook
        ./scripts/debug-discord.sh
        
    - name: Build Docker Image
      run: |
        # Test if Dockerfile builds successfully
        docker build -t test-apex-ords .
        
    - name: Cleanup
      if: always()
      run: |
        # Clean up test image
        docker rmi test-apex-ords 2>/dev/null || true
